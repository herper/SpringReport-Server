# This workflow will build a Java project with Maven, and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-java-with-maven

# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.

name: Release Pipeline

on:
  push:
    tags:
      - 'v*' # 触发条件：推送v开头的tag时执行

jobs:
  build-and-release:
    runs-on: ubuntu-latest

    steps:
      # 步骤1：检出代码
      - name: Checkout code
        uses: actions/checkout@v4

      # 步骤2：设置Java环境
      - name: Set up JDK 8
        uses: actions/setup-java@v3
        with:
          java-version: '8'
          distribution: 'temurin'

      # 步骤3：构建项目并跳过测试
      - name: Build with Maven
        run: mvn -B clean package -DskipTests

      # 步骤4：创建GitHub Release并上传制品
      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: Release ${{ github.ref_name }}
          draft: false
          prerelease: false

      # 步骤5：上传JAR到Release
      - name: Upload Release Asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.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 }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./target/*.jar
          asset_name: app-${{ github.ref_name }}.jar
          asset_content_type: application/java-archive

      # 步骤6：部署到GitHub Maven仓库（可选）
      - name: Deploy to GitHub Repo
        run: |
          mvn deploy -DaltDeploymentRepository=github-mvn-repo::default::file://${GITHUB_WORKSPACE}/deploy-repo
          cd deploy-repo
          git config --global user.name "Junwwang"
          git config --global user.email "junwwang@hotmail.com"
          git add .
          git commit -m "Deploy artifacts for ${{ github.ref_name }}"
          git push origin main
